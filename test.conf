# Config file for mlog agent.
# This is in a (minimal) yaml format, except that indent size
# *must* be 4 (because my parser sucks).

# The name of a class to attach to, in JVM (slash separated) format.
- frodo/Test
    # The name and JVM type signature of a method to attach to.
    # When this method is called, we'll log and print the toString() method of its first parameter.
    - someMethod(Lfrodo/Test$VirtualFile;)Ljava/lang/String;

    # Another method, demonstrating custom options
    - anotherMethod(ILfrodo/Test$VirtualFile;)Ljava/lang/String;
        # By default, when we hit the method breakpoint, we'll log the first method parameter (index 1)
        # You can override this with the param property
        - param: 2
        # By default, when we hit the method breakpoint, we'll call toString() on one of the method
        # parameters. You can override this to call a different method with the displayMethod
        # property. The method must take no arguments and return a java.lang.String.
        - displayMethod: getPath
        # If you want to, you can display a miniature stack trace when the breakpoint is hit using
        # the showTrace property. By default, we don't do this.
        - showTrace: true

    - aThirdMethod(I[Lfrodo/Test$VirtualFile;)Ljava/lang/String;
        - param: 2
        # Sometimes the method parameter you care about doesn't have a convenient method you can
        # call to convert it into a string. In these cases, it can be useful to call a static
        # method instead, passing in the parameter, and have it return a String to display instead.
        # Arrays are a really good example of this. Here's how to do this using the `displayMethodStatic`
        # property. The static method must take the parameter you've selected as its only argument,
        # and must return a String.
        - displayMethodStatic: java/util/Arrays.toString([Ljava/lang/Object;)Ljava/lang/String;
        - showTrace: true
